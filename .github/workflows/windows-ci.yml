---
name: Windows build and test
on:
  push:
    branches:
      - 'master'
      - 'stable/*'
  pull_request:
    branches:
      - '**'
  release:
    types:
      - created

jobs:
  build_and_test:
    name: Build and Test
    runs-on: windows-2022
    steps:
      - name: Setup date
        run: |
          echo (-join('"builddate=', (Get-Date).ToString("dd MMM yyyy"),'"')) >> $GITHUB_ENV

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6

      - name: Checkout Sonnet source
        uses: actions/checkout@v3
        with:
          path: Sonnet

      - name: Checkout dependenies sources
        shell: cmd
        run: |
          git clone --depth 1 https://github.com/coin-or-tools/BuildTools.git -b master 
          git clone --depth 1 https://github.com/coin-or/Cbc.git -b master
          git clone --depth 1 https://github.com/coin-or/Clp.git -b master
          git clone --depth 1 https://github.com/coin-or/Cgl.git -b master
          git clone --depth 1 https://github.com/coin-or/CoinUtils.git -b master
          git clone --depth 1 https://github.com/coin-or/Osi.git -b master
          git clone --depth 1 https://github.com/coin-or-tools/Data-Sample -b master
          git clone --depth 1 https://github.com/coin-or-tools/Data-miplib3 -b master
          7z x -bso0 -oData-miplib3 Data-miplib3\*.gz
          erase /f Data-miplib3\*.gz

      - name: Prepare for build
        shell: cmd
        run: |
          call Sonnet\build-third-party-license.bat
          echo Date: ${{ env.builddate }} > Sonnet\BUILD-INFO.txt
          echo Ref: ${{ github.ref }} >> Sonnet\BUILD-INFO.txt
          echo Ref name: ${{ github.ref_name }} >> Sonnet\BUILD-INFO.txt
          echo Commit: ${{ github.sha }} >> Sonnet\BUILD-INFO.txt
          7z a -tzip -r -x!.git "Sonnet-${{ github.ref_name }}-CI-src.zip" .\*
          nuget restore Sonnet\MSVisualStudio\v17\Sonnet.sln

      #- name: Build
      #  run: msbuild Sonnet\MSVisualStudio\v17\Sonnet.sln -p:Configuration=Release -p:Platform=x64 -m

      #- name: Run tests for net4 framework
      #  shell: cmd
      #  run: |
      #    cd Sonnet\MSVisualStudio\v17\SonnetTestNET4\bin\x64\Release\
      #    dotnet test SonnetTest.exe --logger "trx;LogFileName=test-net4-results.trx" 

      #- name: Test Report for net4 framework
      #  uses: dorny/test-reporter@v1
      #  if: always()
      #  with:
      #    name: Test Report for net4 framework
      #    working-directory: Sonnet
      #    path: "**/test-net4-results.trx"                            
      #    reporter: dotnet-trx
      #    fail-on-error: true
  
      #- name: Run tests for net60
      #  if: always()
      #  shell: cmd
      #  run: |
      #    cd Sonnet\MSVisualStudio\v17\SonnetTest\bin\x64\Release\net6.0\
      #    dotnet test SonnetTest.exe --logger "trx;LogFileName=test-net60-results.trx"

      #- name: Test Report for net60
      #  uses: dorny/test-reporter@v1
      #  if: always()
      #  with:
      #    name:  Test Report for net60
      #    working-directory: Sonnet
      #    path: "**/test-net60-results.trx"                            
      #    reporter: dotnet-trx
      #    fail-on-error: true

      - name: Create asset package
        shell: cmd
        run: |
          mkdir package\x64\net6.0
          copy Sonnet\MSVisualStudio\v17\Sonnet\bin\x64\Release\net6.0\Sonnet.dll package\x64\net6.0\.
          copy Sonnet\MSVisualStudio\v17\Sonnet\bin\x64\Release\net6.0\Sonnet.xml package\x64\net6.0\.
          copy Sonnet\MSVisualStudio\v17\Sonnet\bin\x64\Release\net6.0\SonnetWrapper.dll package\x64\net6.0\.
          copy Sonnet\MSVisualStudio\v17\Sonnet\bin\x64\Release\net6.0\SonnetWrapper.xml package\x64\net6.0\.
          copy Sonnet\MSVisualStudio\v17\Sonnet\bin\x64\Release\net6.0\Ijwhost.dll package\x64\net6.0\.
          mkdir package\x64\net48
          copy Sonnet\MSVisualStudio\v17\SonnetNET4\bin\x64\Release\Sonnet.dll package\x64\net48\.
          copy Sonnet\MSVisualStudio\v17\SonnetNET4\bin\x64\Release\Sonnet.xml package\x64\net48\.
          copy Sonnet\MSVisualStudio\v17\SonnetNET4\bin\x64\Release\SonnetWrapper.dll package\x64\net48\.
          copy Sonnet\MSVisualStudio\v17\SonnetNET4\bin\x64\Release\SonnetWrapper.xml package\x64\net48\.
          copy Sonnet\AUTHORS.txt package\.
          copy Sonnet\CHANGELOG.txt package\.
          copy Sonnet\LICENSE.txt package\.
          copy Sonnet\NOTICE.txt package\.
          copy Sonnet\README.md package\.
          copy Sonnet\THIRD-PARTY-LICENSE.txt package\.
          copy Sonnet\examples\Example5.cs package\.
          copy Sonnet\BUILD-INFO.txt package\.
          cd package
          7z a -tzip -r "..\Sonnet-${{ github.ref_name }}-CI-bin.zip" *
          cd ..
      
      - name: Upload snapshot release
        uses: softprops/action-gh-release@v1
        with:
          name: Sonnet-snapshot ${{ env.builddate }}
          tag_name: snapshot
          token: ${{ secrets.GITHUB_TOKEN }}
          target_commitish: 
          files: |
            Sonnet-${{ github.ref_name }}-CI-src.zip
            Sonnet-${{ github.ref_name }}-CI-bin.zip
     
      - name: Update snapshot tag
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}          
          script: |
            try {
                await github.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "tags/snapshot"
                })
            } catch (e) {
              console.log("The snapshot tag doesn't exist yet: " + e)
            }
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/snapshot",
              sha: context.sha
            })

